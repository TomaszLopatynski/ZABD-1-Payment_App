{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","actions/types.js","http-common.js","services/profilecards.service.js","components/profilecards.component.js","actions/profilecards.js","services/profiletransactions.service.js","components/profiletransactions.component.js","actions/profiletransactions.js","services/cards.service.js","services/users.service.js","services/transactions.service.js","components/payment.component.js","actions/cards.js","actions/users.js","actions/transactions.js","App.js","reportWebVitals.js","reducers/cards.js","reducers/users.js","reducers/transactions.js","reducers/index.js","store.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","name","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","onChange","validations","disabled","style","display","Component","isEmail","vname","vusername","vpassword","Register","handleRegister","onChangeName","onChangeEmail","successful","register","CREATE_USER","CREATE_CARD","CREATE_TRANSACTION","create","baseURL","headers","id","http","get","ProfileCards","setActiveCard","currentCard","cards","currentIndex","retrieveProfileCards","getCurrentUser","result","card","index","map","onClick","number","expDate","cvv","connect","dispatch","a","ProfileCardsDataService","res","payload","Promise","resolve","reject","ProfileTransactions","setActiveTransaction","currentTransaction","transactions","retrieveProfileTransactions","transaction","receiverCN","amount","date","ProfileTransactionsDataService","put","delete","isAlpha","isCreditCard","isInt","isDate","Payments","onChangeAmount","onChangeOwnerCardNumber","onChangeExpDate","onChangeCVV","onChangeReceiverCardNumber","handlePayment","ownerCN","createCard","submitted","console","log","catch","createUser","createTransactions","Date","now","CardsDataService","UsersDataService","TransactionsDataService","App","logOut","showAdminBoard","currentUser","undefined","user","roles","includes","logout","to","href","exact","path","component","Payment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cardReducer","action","userReducer","users","transactionReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d62e4fd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, name, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            name,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleLogin}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                {this.state.loading && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"/>\r\n                                )}\r\n                                <span>Login</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vname = value => {\r\n    if (value.length < 7 || value.length > 45) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 7 and 45 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.name,\r\n                this.state.email,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleRegister}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        {!this.state.successful && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required, vusername]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"name\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.onChangeName}\r\n                                        validations={[required, vname]}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChangeEmail}\r\n                                        validations={[required, email]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required, vpassword]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div\r\n                                    className={\r\n                                        this.state.successful\r\n                                            ? \"alert alert-success\"\r\n                                            : \"alert alert-danger\"\r\n                                    }\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const CREATE_USER = \"CREATE_USER\";\r\nexport const CREATE_CARD = \"CREATE_CARD\";\r\nexport const CREATE_TRANSACTION = \"CREATE_TRANSACTION\";\r\nexport const RETRIEVE_PROFILECARDS = \"RETRIEVE_PROFILECARDS\";\r\nexport const RETRIEVE_PROFILETRANSACTIONS = \"RETRIEVE_PROFILETRANSACTIONS\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8080/api\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass ProfileCardsDataService {\r\n    get(id) {\r\n        return http.get(`/profilecards/${id}`);\r\n    }\r\n}\r\n\r\nexport default new ProfileCardsDataService();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    retrieveProfileCards,\r\n} from \"../actions/profilecards\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nclass ProfileCards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setActiveCard = this.setActiveCard.bind(this);\r\n\r\n        this.state = {\r\n            currentCard: null,\r\n            cards: [],\r\n            currentIndex: -1\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.retrieveProfileCards(AuthService.getCurrentUser().id)\r\n            .then(result => this.setState({\r\n            cards: result\r\n        }))\r\n    }\r\n\r\n    setActiveCard(card, index) {\r\n        this.setState({\r\n            currentCard: card,\r\n            currentIndex: index,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { currentCard, cards, currentIndex } = this.state;\r\n\r\n        return (\r\n            <div className=\"list row\">\r\n                <div className=\"col-md-6\">\r\n                    <h4>Cards List</h4>\r\n\r\n                    <ul className=\"list-group\">\r\n                        {cards &&\r\n                        cards.map((card, index) => (\r\n                            <li\r\n                                className={\r\n                                    \"list-group-item \" +\r\n                                    (index === currentIndex ? \"active\" : \"\")\r\n                                }\r\n                                onClick={() => this.setActiveCard(card, index)}\r\n                                key={index}\r\n                            >\r\n                                {card.number}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {currentCard ? (\r\n                        <div>\r\n                            <h4>Card</h4>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Number:</strong>\r\n                                </label>{\" \"}\r\n                                {currentCard.number}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Expiration Date:</strong>\r\n                                </label>{\" \"}\r\n                                {currentCard.expDate}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>CVV:</strong>\r\n                                </label>{\" \"}\r\n                                {currentCard.cvv}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <br />\r\n                            <p>Please click on a Card...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cards: state.cards,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    retrieveProfileCards\r\n})(ProfileCards);","import {\r\n    RETRIEVE_PROFILECARDS,\r\n} from \"./types\";\r\n\r\nimport ProfileCardsDataService from \"../services/profilecards.service\";\r\n\r\nexport const retrieveProfileCards = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await ProfileCardsDataService.get(id);\r\n\r\n        dispatch({\r\n            type: RETRIEVE_PROFILECARDS,\r\n            payload: res.data,\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};","import http from \"../http-common\";\r\n\r\nclass ProfileTransactionsDataService {\r\n    get(id) {\r\n        return http.get(`/profiletransactions/${id}`);\r\n    }\r\n}\r\n\r\nexport default new ProfileTransactionsDataService();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    retrieveProfileTransactions,\r\n} from \"../actions/profiletransactions\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nclass ProfileTransactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setActiveTransaction = this.setActiveTransaction.bind(this);\r\n\r\n        this.state = {\r\n            currentTransaction: null,\r\n            transactions: [],\r\n            currentIndex: -1\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.retrieveProfileTransactions(AuthService.getCurrentUser().id)\r\n            .then(result => this.setState({\r\n                transactions: result\r\n            }))\r\n    }\r\n\r\n    setActiveTransaction(transaction, index) {\r\n        this.setState({\r\n            currentTransaction: transaction,\r\n            currentIndex: index,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { currentTransaction, transactions, currentIndex } = this.state;\r\n\r\n        return (\r\n            <div className=\"list row\">\r\n                <div className=\"col-md-6\">\r\n                    <h4>Transactions List</h4>\r\n\r\n                    <ul className=\"list-group\">\r\n                        {transactions &&\r\n                        transactions.map((transaction, index) => (\r\n                            <li\r\n                                className={\r\n                                    \"list-group-item \" +\r\n                                    (index === currentIndex ? \"active\" : \"\")\r\n                                }\r\n                                onClick={() => this.setActiveTransaction(transaction, index)}\r\n                                key={index}\r\n                            >\r\n                                {transaction.receiverCN}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {currentTransaction ? (\r\n                        <div>\r\n                            <h4>Card</h4>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Amount:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTransaction.amount}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Receiver card number:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTransaction.receiverCN}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Transaction date:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTransaction.date}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <br />\r\n                            <p>Please click on a Transaction...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.transactions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    retrieveProfileTransactions\r\n})(ProfileTransactions);","import {\r\n    RETRIEVE_PROFILETRANSACTIONS,\r\n} from \"./types\";\r\n\r\nimport ProfileTransactionsDataService from \"../services/profiletransactions.service\";\r\n\r\nexport const retrieveProfileTransactions = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await ProfileTransactionsDataService.get(id);\r\n\r\n        dispatch({\r\n            type: RETRIEVE_PROFILETRANSACTIONS,\r\n            payload: res.data,\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};","import http from \"../http-common\";\r\n\r\nclass CardsDataService {\r\n    get(id) {\r\n        return http.get(`/cards/${id}`);\r\n    }\r\n}\r\n\r\nexport default new CardsDataService();","import http from \"../http-common\";\r\n\r\nclass UsersDataService {\r\n    getAll() {\r\n        return http.get(\"/users\");\r\n    }\r\n\r\n    get(id) {\r\n        return http.get(`/users/${id}`);\r\n    }\r\n\r\n    create(data) {\r\n        return http.post(\"/users\", data);\r\n    }\r\n\r\n    update(id, data) {\r\n        return http.put(`/users/${id}`, data);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(`/users/${id}`);\r\n    }\r\n}\r\n\r\nexport default new UsersDataService();","import http from \"../http-common\";\r\n\r\nclass TransactionsDataService {\r\n    getAll() {\r\n        return http.get(\"/transactions\");\r\n    }\r\n\r\n    get(id) {\r\n        return http.get(`/transactions/${id}`);\r\n    }\r\n\r\n    create(data) {\r\n        return http.post(\"/transactions\", data);\r\n    }\r\n\r\n    update(id, data) {\r\n        return http.put(`/transactions/${id}`, data);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(`/transactions/${id}`);\r\n    }\r\n}\r\n\r\nexport default new TransactionsDataService();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createCard } from \"../actions/cards\";\r\nimport { createUser } from \"../actions/users\";\r\nimport { createTransactions } from \"../actions/transactions\";\r\nimport {isInt, isDate, isCreditCard, isAlpha} from \"validator\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst name = value => {\r\n    if (!isAlpha(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid name.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst card = value => {\r\n    if (!isCreditCard(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid card.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst amount = value => {\r\n    if (!isInt(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid amount.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst date = value => {\r\n    if (!isDate(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid date.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst cvv = value => {\r\n    if (value.length === 3) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The CVV must have 3 numbers.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Payments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeAmount = this.onChangeAmount.bind(this);\r\n        this.onChangeOwnerCardNumber = this.onChangeOwnerCardNumber.bind(this);\r\n        this.onChangeExpDate = this.onChangeExpDate.bind(this);\r\n        this.onChangeCVV = this.onChangeCVV.bind(this);\r\n        this.onChangeReceiverCardNumber = this.onChangeReceiverCardNumber.bind(this);\r\n        this.handlePayment = this.handlePayment.bind(this);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            amount: \"\",\r\n            ownerCN: \"\",\r\n            expDate: \"\",\r\n            cvv: \"\",\r\n            receiverCN: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAmount(e) {\r\n        this.setState({\r\n            amount: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeOwnerCardNumber(e) {\r\n        this.setState({\r\n            ownerCN: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeExpDate(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeCVV(e) {\r\n        this.setState({\r\n            cvv: e.target.value\r\n        });\r\n    }\r\n    onChangeReceiverCardNumber(e) {\r\n        this.setState({\r\n            receiverCN: e.target.value\r\n        });\r\n    }\r\n\r\n    handlePayment() {\r\n        const { name, amount, ownerCN, expDate, cvv, receiverCN } = this.state;\r\n\r\n        this.props\r\n            .createCard(ownerCN, expDate, cvv)\r\n            .then((data) => {\r\n                this.setState({\r\n                    ownerCN: data.ownerCN,\r\n                    expDate: data.ownerCN,\r\n                    cvv: data.cvv,\r\n\r\n                    submitted: true,\r\n                });\r\n                console.log(data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n\r\n        this.props\r\n            .createUser(name)\r\n            .then((data) => {\r\n                this.setState({\r\n                    name: data.name,\r\n\r\n                    submitted: true,\r\n                });\r\n                console.log(data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n\r\n        this.props\r\n            .createTransactions(amount, receiverCN)\r\n            .then((data) => {\r\n                this.setState({\r\n                    amount: data.amount,\r\n                    receiverCN: data.receiverCN,\r\n                    date: Date.now(),\r\n\r\n                    submitted: true,\r\n                });\r\n                console.log(data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"submit-form\">\r\n                <div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            required\r\n                            value={this.state.name}\r\n                            onChange={this.onChangeName}\r\n                            name=\"name\"\r\n                            validations={[required, name]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"amount\">Amount:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"amount\"\r\n                            required\r\n                            value={this.state.amount}\r\n                            onChange={this.onChangeAmount}\r\n                            name=\"amount\"\r\n                            validations={[required, amount]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ownerCN\">Owner card number:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"ownerCN\"\r\n                            required\r\n                            value={this.state.ownerCN}\r\n                            onChange={this.onChangeOwnerCardNumber}\r\n                            name=\"ownerCN\"\r\n                            validations={[required, card]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"expDate\">Expiration date:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"expDate\"\r\n                            required\r\n                            value={this.state.expDate}\r\n                            onChange={this.onChangeExpDate}\r\n                            name=\"expDate\"\r\n                            validations={[required, date]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cvv\">CVV:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"cvv\"\r\n                            required\r\n                            value={this.state.cvv}\r\n                            onChange={this.onChangeCVV}\r\n                            name=\"cvv\"\r\n                            validations={[required, cvv]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"receiverCN\">Receiver Card Number:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"receiverCN\"\r\n                            required\r\n                            value={this.state.receiverCN}\r\n                            onChange={this.onChangeReceiverCardNumber}\r\n                            name=\"receiverCN\"\r\n                            validations={[required, card]}\r\n                        />\r\n                    </div>\r\n                    <button onClick={this.handlePayment} className=\"btn btn-success\">\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createCard, createUser, createTransactions })(Payments);","import {\r\n    CREATE_CARD,\r\n} from \"./types\";\r\n\r\nimport CardsDataService from \"../services/cards.service\";\r\n\r\nexport const createCard = (number, expDate, cvv) => async (dispatch) => {\r\n    try {\r\n        const res = await CardsDataService.create({ number, expDate, cvv });\r\n\r\n        dispatch({\r\n            type: CREATE_CARD,\r\n            payload: res.data,\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};","import {\r\n    CREATE_USER,\r\n} from \"./types\";\r\n\r\nimport UsersDataService from \"../services/users.service\";\r\n\r\nexport const createUser = (name) => async (dispatch) => {\r\n    try {\r\n        const res = await UsersDataService.create({ name });\r\n\r\n        dispatch({\r\n            type: CREATE_USER,\r\n            payload: res.data,\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};","import {\r\n    CREATE_TRANSACTION,\r\n} from \"./types\";\r\n\r\nimport TransactionsDataService from \"../services/transactions.service\";\r\n\r\nexport const createTransactions = (amount, receiverCN, date) => async (dispatch) => {\r\n    try {\r\n        const res = await TransactionsDataService.get({ amount, receiverCN, date });\r\n\r\n        dispatch({\r\n            type: CREATE_TRANSACTION,\r\n            payload: res.data,\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport ProfileCards from \"./components/profilecards.component\";\nimport ProfileTransactions from \"./components/profiletransactions.component\";\nimport Payment from \"./components/payment.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n        <Router>\n          <div>\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n              <Link to={\"/\"} className=\"navbar-brand\">\n                PaymentApp\n              </Link>\n              <div className=\"navbar-nav mr-auto\">\n\n                <li className=\"nav-item\">\n                  <Link to={\"/payment\"} className=\"nav-link\">\n                    Payment\n                  </Link>\n                </li>\n              </div>\n\n              {currentUser ? (\n                  <div className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                      <Link to={\"/profilecards/:id\"} className=\"nav-link\">\n                        Your Cards\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link to={\"/profiletransactions/:id\"} className=\"nav-link\">\n                        Your Transactions\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a href={\"/\"} className=\"nav-link\" onClick={this.logOut}>\n                        LogOut\n                      </a>\n                    </li>\n                  </div>\n              ) : (\n                  <div className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                      <Link to={\"/login\"} className=\"nav-link\">\n                        Login\n                      </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                      <Link to={\"/register\"} className=\"nav-link\">\n                        Sign Up\n                      </Link>\n                    </li>\n                  </div>\n              )}\n            </nav>\n\n            <div className=\"container mt-3\">\n              <Switch>\n                <Route exact path={[\"/login\"]} component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/profilecards/:id\" component={ProfileCards} />\n                <Route exact path=\"/profiletransactions/:id\" component={ProfileTransactions} />\n                <Route path={[\"/\", \"/payment\"]} component={Payment} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    CREATE_CARD\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction cardReducer(cards = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CREATE_CARD:\r\n            return [...cards, payload];\r\n\r\n        default:\r\n            return cards;\r\n    }\r\n}\r\n\r\nexport default cardReducer;","import {\r\n    CREATE_USER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction userReducer(users = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CREATE_USER:\r\n            return [...users, payload];\r\n\r\n        default:\r\n            return users;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {\r\n    CREATE_TRANSACTION\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction transactionReducer(transactions = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CREATE_TRANSACTION:\r\n            return [...transactions, payload];\r\n\r\n        default:\r\n            return transactions;\r\n    }\r\n}\r\n\r\nexport default transactionReducer;","import { combineReducers } from \"redux\";\r\nimport cards from \"./cards\";\r\nimport users from \"./users\";\r\nimport transactions from \"./transactions\";\r\n\r\nexport default combineReducers({\r\n    cards,\r\n    users,\r\n    transactions\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}